<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.autuan.templatebusinesssupport.base.mapper.DictMapper">
  <resultMap id="BaseResultMap" type="top.autuan.templatebusinesssupport.base.entity.Dict">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="val" jdbcType="VARCHAR" property="val" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="enable" jdbcType="INTEGER" property="enable" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `key`, `val`, `type`, `enable`, `remark`
  </sql>
  <select id="selectByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.DictExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `dict`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `dict`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `dict`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.DictExample">
    delete from `dict`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.autuan.templatebusinesssupport.base.entity.Dict">
    insert into `dict` (`id`, `key`, `val`, 
      `type`, `enable`, `remark`
      )
    values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{val,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into `dict`
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            `id`,
          </if>
          <if test="record.key != null">
            `key`,
          </if>
          <if test="record.val != null">
            `val`,
          </if>
          <if test="record.type != null">
            `type`,
          </if>
          <if test="record.enable != null">
            `enable`,
          </if>
          <if test="record.remark != null">
            `remark`,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.key != null">
            #{record.key,jdbcType=VARCHAR},
          </if>
          <if test="record.val != null">
            #{record.val,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.DictExample" resultType="java.lang.Long">
    select count(*) from `dict`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `dict`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            `id` = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.key != null">
            `key` = #{record.key,jdbcType=VARCHAR},
          </if>
          <if test="record.val != null">
            `val` = #{record.val,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            `enable` = #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            `remark` = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `dict`
    set `id` = #{record.id,jdbcType=INTEGER},
      `key` = #{record.key,jdbcType=VARCHAR},
      `val` = #{record.val,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      `enable` = #{record.enable,jdbcType=INTEGER},
      `remark` = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update `dict`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.key != null">
            `key` = #{record.key,jdbcType=VARCHAR},
          </if>
          <if test="record.val != null">
            `val` = #{record.val,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            `enable` = #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            `remark` = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where `id` = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.autuan.templatebusinesssupport.base.entity.Dict">
    update `dict`
    set `key` = #{key,jdbcType=VARCHAR},
      `val` = #{val,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=INTEGER},
      `remark` = #{remark,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.DictExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `dict`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into `dict`
    (`id`, `key`, `val`, `type`, `enable`, `remark`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.key,jdbcType=VARCHAR}, #{item.val,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=VARCHAR}, #{item.enable,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into `dict` (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'key'.toString() == column.value">
          #{item.key,jdbcType=VARCHAR}
        </if>
        <if test="'val'.toString() == column.value">
          #{item.val,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=VARCHAR}
        </if>
        <if test="'enable'.toString() == column.value">
          #{item.enable,jdbcType=INTEGER}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>