<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.autuan.templatebusinesssupport.base.mapper.AppVersionsMapper">
  <resultMap id="BaseResultMap" type="top.autuan.templatebusinesssupport.base.entity.AppVersions">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform" jdbcType="INTEGER" property="platform" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="force_flag" jdbcType="INTEGER" property="forceFlag" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="download_url" jdbcType="VARCHAR" property="downloadUrl" />
    <result column="md5" jdbcType="VARCHAR" property="md5" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `platform`, `version`, `type`, `force_flag`, `description`, `download_url`, 
    `md5`, `size`, `create_time`, `update_time`, `create_by`, `update_by`, `del_flag`
  </sql>
  <select id="selectByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `app_versions`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `app_versions`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `app_versions`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersionsExample">
    delete from `app_versions`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersions">
    insert into `app_versions` (`id`, `platform`, `version`, 
      `type`, `force_flag`, `description`, 
      `download_url`, `md5`, `size`, 
      `create_time`, `update_time`, `create_by`, 
      `update_by`, `del_flag`)
    values (#{id,jdbcType=INTEGER}, #{platform,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{forceFlag,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{downloadUrl,jdbcType=VARCHAR}, #{md5,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT}, #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into `app_versions`
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            `id`,
          </if>
          <if test="record.platform != null">
            `platform`,
          </if>
          <if test="record.version != null">
            `version`,
          </if>
          <if test="record.type != null">
            `type`,
          </if>
          <if test="record.forceFlag != null">
            `force_flag`,
          </if>
          <if test="record.description != null">
            `description`,
          </if>
          <if test="record.downloadUrl != null">
            `download_url`,
          </if>
          <if test="record.md5 != null">
            `md5`,
          </if>
          <if test="record.size != null">
            `size`,
          </if>
          <if test="record.createTime != null">
            `create_time`,
          </if>
          <if test="record.updateTime != null">
            `update_time`,
          </if>
          <if test="record.createBy != null">
            `create_by`,
          </if>
          <if test="record.updateBy != null">
            `update_by`,
          </if>
          <if test="record.delFlag != null">
            `del_flag`,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.platform != null">
            #{record.platform,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            #{record.version,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.forceFlag != null">
            #{record.forceFlag,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.downloadUrl != null">
            #{record.downloadUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.md5 != null">
            #{record.md5,jdbcType=VARCHAR},
          </if>
          <if test="record.size != null">
            #{record.size,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersionsExample" resultType="java.lang.Long">
    select count(*) from `app_versions`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `app_versions`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            `id` = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.platform != null">
            `platform` = #{record.platform,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            `version` = #{record.version,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.forceFlag != null">
            `force_flag` = #{record.forceFlag,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            `description` = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.downloadUrl != null">
            `download_url` = #{record.downloadUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.md5 != null">
            `md5` = #{record.md5,jdbcType=VARCHAR},
          </if>
          <if test="record.size != null">
            `size` = #{record.size,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            `create_by` = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            `update_by` = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            `del_flag` = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `app_versions`
    set `id` = #{record.id,jdbcType=INTEGER},
      `platform` = #{record.platform,jdbcType=INTEGER},
      `version` = #{record.version,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      `force_flag` = #{record.forceFlag,jdbcType=INTEGER},
      `description` = #{record.description,jdbcType=VARCHAR},
      `download_url` = #{record.downloadUrl,jdbcType=VARCHAR},
      `md5` = #{record.md5,jdbcType=VARCHAR},
      `size` = #{record.size,jdbcType=VARCHAR},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      `create_by` = #{record.createBy,jdbcType=BIGINT},
      `update_by` = #{record.updateBy,jdbcType=BIGINT},
      `del_flag` = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update `app_versions`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.platform != null">
            `platform` = #{record.platform,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            `version` = #{record.version,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.forceFlag != null">
            `force_flag` = #{record.forceFlag,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            `description` = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.downloadUrl != null">
            `download_url` = #{record.downloadUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.md5 != null">
            `md5` = #{record.md5,jdbcType=VARCHAR},
          </if>
          <if test="record.size != null">
            `size` = #{record.size,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            `create_by` = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            `update_by` = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            `del_flag` = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where `id` = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersions">
    update `app_versions`
    set `platform` = #{platform,jdbcType=INTEGER},
      `version` = #{version,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      `force_flag` = #{forceFlag,jdbcType=INTEGER},
      `description` = #{description,jdbcType=VARCHAR},
      `download_url` = #{downloadUrl,jdbcType=VARCHAR},
      `md5` = #{md5,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=VARCHAR},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      `create_by` = #{createBy,jdbcType=BIGINT},
      `update_by` = #{updateBy,jdbcType=BIGINT},
      `del_flag` = #{delFlag,jdbcType=TINYINT}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="top.autuan.templatebusinesssupport.base.entity.AppVersionsExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `app_versions`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into `app_versions`
    (`id`, `platform`, `version`, `type`, `force_flag`, `description`, `download_url`, 
      `md5`, `size`, `create_time`, `update_time`, `create_by`, `update_by`, `del_flag`
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.platform,jdbcType=INTEGER}, #{item.version,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=INTEGER}, #{item.forceFlag,jdbcType=INTEGER}, #{item.description,jdbcType=VARCHAR}, 
        #{item.downloadUrl,jdbcType=VARCHAR}, #{item.md5,jdbcType=VARCHAR}, #{item.size,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT}, 
        #{item.updateBy,jdbcType=BIGINT}, #{item.delFlag,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into `app_versions` (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'platform'.toString() == column.value">
          #{item.platform,jdbcType=INTEGER}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'force_flag'.toString() == column.value">
          #{item.forceFlag,jdbcType=INTEGER}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'download_url'.toString() == column.value">
          #{item.downloadUrl,jdbcType=VARCHAR}
        </if>
        <if test="'md5'.toString() == column.value">
          #{item.md5,jdbcType=VARCHAR}
        </if>
        <if test="'size'.toString() == column.value">
          #{item.size,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>