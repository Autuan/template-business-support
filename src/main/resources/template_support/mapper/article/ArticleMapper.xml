<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.autuan.templatebusinesssupport.article.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="top.autuan.templatebusinesssupport.article.entity.Article">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="subject" jdbcType="INTEGER" property="subject" />
    <result column="hits" jdbcType="INTEGER" property="hits" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `subject`, `hits`, `title`, `subtitle`, `intro`, `content`, `status`, `create_time`, 
    `update_time`, `create_by`, `update_by`, `del_flag`
  </sql>
  <select id="selectByExample" parameterType="top.autuan.templatebusinesssupport.article.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `article`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `article`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `article`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.autuan.templatebusinesssupport.article.entity.ArticleExample">
    delete from `article`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.autuan.templatebusinesssupport.article.entity.Article">
    insert into `article` (`id`, `subject`, `hits`, 
      `title`, `subtitle`, `intro`, 
      `content`, `status`, `create_time`, 
      `update_time`, `create_by`, `update_by`, 
      `del_flag`)
    values (#{id,jdbcType=BIGINT}, #{subject,jdbcType=INTEGER}, #{hits,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{subtitle,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into `article`
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            `id`,
          </if>
          <if test="record.subject != null">
            `subject`,
          </if>
          <if test="record.hits != null">
            `hits`,
          </if>
          <if test="record.title != null">
            `title`,
          </if>
          <if test="record.subtitle != null">
            `subtitle`,
          </if>
          <if test="record.intro != null">
            `intro`,
          </if>
          <if test="record.content != null">
            `content`,
          </if>
          <if test="record.status != null">
            `status`,
          </if>
          <if test="record.createTime != null">
            `create_time`,
          </if>
          <if test="record.updateTime != null">
            `update_time`,
          </if>
          <if test="record.createBy != null">
            `create_by`,
          </if>
          <if test="record.updateBy != null">
            `update_by`,
          </if>
          <if test="record.delFlag != null">
            `del_flag`,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.subject != null">
            #{record.subject,jdbcType=INTEGER},
          </if>
          <if test="record.hits != null">
            #{record.hits,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.subtitle != null">
            #{record.subtitle,jdbcType=VARCHAR},
          </if>
          <if test="record.intro != null">
            #{record.intro,jdbcType=VARCHAR},
          </if>
          <if test="record.content != null">
            #{record.content,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="top.autuan.templatebusinesssupport.article.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from `article`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `article`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            `id` = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.subject != null">
            `subject` = #{record.subject,jdbcType=INTEGER},
          </if>
          <if test="record.hits != null">
            `hits` = #{record.hits,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            `title` = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.subtitle != null">
            `subtitle` = #{record.subtitle,jdbcType=VARCHAR},
          </if>
          <if test="record.intro != null">
            `intro` = #{record.intro,jdbcType=VARCHAR},
          </if>
          <if test="record.content != null">
            `content` = #{record.content,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            `create_by` = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            `update_by` = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            `del_flag` = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `article`
    set `id` = #{record.id,jdbcType=BIGINT},
      `subject` = #{record.subject,jdbcType=INTEGER},
      `hits` = #{record.hits,jdbcType=INTEGER},
      `title` = #{record.title,jdbcType=VARCHAR},
      `subtitle` = #{record.subtitle,jdbcType=VARCHAR},
      `intro` = #{record.intro,jdbcType=VARCHAR},
      `content` = #{record.content,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      `create_by` = #{record.createBy,jdbcType=BIGINT},
      `update_by` = #{record.updateBy,jdbcType=BIGINT},
      `del_flag` = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update `article`
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.subject != null">
            `subject` = #{record.subject,jdbcType=INTEGER},
          </if>
          <if test="record.hits != null">
            `hits` = #{record.hits,jdbcType=INTEGER},
          </if>
          <if test="record.title != null">
            `title` = #{record.title,jdbcType=VARCHAR},
          </if>
          <if test="record.subtitle != null">
            `subtitle` = #{record.subtitle,jdbcType=VARCHAR},
          </if>
          <if test="record.intro != null">
            `intro` = #{record.intro,jdbcType=VARCHAR},
          </if>
          <if test="record.content != null">
            `content` = #{record.content,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            `create_by` = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            `update_by` = #{record.updateBy,jdbcType=BIGINT},
          </if>
          <if test="record.delFlag != null">
            `del_flag` = #{record.delFlag,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where `id` = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.autuan.templatebusinesssupport.article.entity.Article">
    update `article`
    set `subject` = #{subject,jdbcType=INTEGER},
      `hits` = #{hits,jdbcType=INTEGER},
      `title` = #{title,jdbcType=VARCHAR},
      `subtitle` = #{subtitle,jdbcType=VARCHAR},
      `intro` = #{intro,jdbcType=VARCHAR},
      `content` = #{content,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      `create_by` = #{createBy,jdbcType=BIGINT},
      `update_by` = #{updateBy,jdbcType=BIGINT},
      `del_flag` = #{delFlag,jdbcType=TINYINT}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="top.autuan.templatebusinesssupport.article.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `article`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into `article`
    (`id`, `subject`, `hits`, `title`, `subtitle`, `intro`, `content`, `status`, `create_time`, 
      `update_time`, `create_by`, `update_by`, `del_flag`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.subject,jdbcType=INTEGER}, #{item.hits,jdbcType=INTEGER}, 
        #{item.title,jdbcType=VARCHAR}, #{item.subtitle,jdbcType=VARCHAR}, #{item.intro,jdbcType=VARCHAR}, 
        #{item.content,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT}, 
        #{item.delFlag,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into `article` (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'subject'.toString() == column.value">
          #{item.subject,jdbcType=INTEGER}
        </if>
        <if test="'hits'.toString() == column.value">
          #{item.hits,jdbcType=INTEGER}
        </if>
        <if test="'title'.toString() == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'subtitle'.toString() == column.value">
          #{item.subtitle,jdbcType=VARCHAR}
        </if>
        <if test="'intro'.toString() == column.value">
          #{item.intro,jdbcType=VARCHAR}
        </if>
        <if test="'content'.toString() == column.value">
          #{item.content,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=TINYINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>